created: 20230520154610555
modified: 20230512010344539
tags: $:/tags/Macro
title: $:/plugins/nico/projectify/macros/done-mark
type: text/vnd.tiddlywiki

\procedure add-days(startdate n:"1")
  <$let inseconds={{{ [<n>multiply[86400000]] }}}>
    {{{[<startdate>format:date[TIMESTAMP]add<inseconds>format:timestamp[YYYY0MM0DD0hh0mm0ss0XXX]]}}}
  </$let>
\end

\procedure add-weeks(startdate n:"1")
  <$let inseconds={{{ [<n>multiply[604800000]] }}}>
    {{{ [<startdate>format:date[TIMESTAMP]add<inseconds>format:timestamp[YYYY0MM0DD0hh0mm0ss0XXX]] }}}
  </$let>
\end

\procedure add-months(startdate n:"1")
  <$let m={{{[<startdate>format:date[0MM]add<n>]}}}>
    <$let y={{{[<startdate>format:date[YYYY]]}}}>
      <$let rest={{{ [<startdate>format:date[0DD0hh0mm0ss0XXX]] }}} >
        <$list filter="[<m>compare:number:lteq[12]pad[2]]" variable="mo">
	      <<y>><<mo>><<rest>>
        </$list>
        <$list filter="[<m>compare:number:gt[12]remainder[12]pad[2]]" variable="mo">
          <$let y={{{ [<y>add[1]] }}} >
	        <<y>><<mo>><<rest>>
   	      </$let>
        </$list>
      </$let>
    </$let>
  </$let>
\end


\procedure add-years(startdate n:"1")
  <$let y={{{ [<startdate>format:date[YYYY]add<n>] }}}
       rest={{{ [<startdate>format:date[0MM0DD0hh0mm0ss0XXX]] }}} >
	     <<y>><<rest>>
  </$let>
\end


\procedure recurring-get-next-date()
  <$set name="sdate" filter="[all[current]{$:/config/projectify/NextRecurringBasedOnField}]" emptyValue=<<now "YYYY0MM0DD0hh0mm0ss0XXX">> >
    <$list filter="[all[current]field:recurring.unit[days]]">
      <$transclude $variable=add-days startdate=<<sdate>> n={{!!recurring.n}}/>
    </$list>
    <$list filter="[all[current]field:recurring.unit[weeks]]">
      <$transclude $variable=add-weeks startdate=<<sdate>> n={{!!recurring.n}}/>
    </$list>
    <$list filter="[all[current]field:recurring.unit[months]]">
      <$transclude $variable=add-months startdate=<<sdate>> n={{!!recurring.n}}/>
    </$list>
    <$list filter="[all[current]field:recurring.unit[years]]">
      <$transclude $variable=add-years startdate=<<sdate>> n={{!!recurring.n}}/>
    </$list>
  </$set>
\end


\procedure create-next-task()
  <$set name="newTitle" filter="[all[current]has[caption]]" value={{!!caption}} emptyValue=<<currentTiddler>> >
    <$action-createtiddler $basetitle=<<newTitle>> $template=<<currentTiddler>>>
      <$action-setfield $tiddler=<<createTiddler-title>> due=<<nextdate>>/>
      <$action-setfield $tiddler=<<createTiddler-title>> due.initial=<<nextdate>>/>
      <$action-setfield $tiddler=<<createTiddler-title>> caption=<<newTitle>>/>
      <$action-deletefield $tiddler=<<createTiddler-title>> done.date nextdate />
      <$action-listops $tiddler=<<createTiddler-title>> $field="tags" $subfilter="-done"/>
    </$action-createtiddler>
  </$set>
\end

\procedure py-mark-as-done()
  <$action-listops $tags="done"/>
  <$list filter="[all[current]!has[done.date]]">
     <$action-setfield done.date=<<now "YYYY0MM0DD0hh0mm0ss0XXX">>/>
  </$list>
  <$list filter="[all[current]has[recurring.enabled]]">
    <$wikify name="rawnextdate" text="<<recurring-get-next-date>>">
      <$let nextdate={{{[<rawnextdate>trim[]]}}}>
        <$vars stateTiddler=<<qualify "$:/temp/projectify/confirm-next">> sourceTiddler=<<currentTiddler>> nextdate0=<<nextdate>> >
          <$action-setfield $tiddler=<<stateTiddler>> due=<<nextdate>>/>
          <$list filter="[all[current]{$:/config/projectify/ConfirmNextRecurringDate}match[no]]" variable="dummy">
	    <<trigger-recurring>>
	  </$list>
          <$list filter="[all[current]{$:/config/projectify/ConfirmNextRecurringDate}match[yes]]" variable="dummy">
            <$action-sendmessage $message="tm-modal" $param="$:/plugins/nico/projectify/ui/forms/ConfirmNextDate" stateTiddler=<<stateTiddler>> sourceTiddler=<<sourceTiddler>> />
          </$list>
          <$list filter="[all[current]{$:/config/projectify/ConfirmNextRecurringDate}match[except_on_due_date]]" variable="dummy" >
            <$list filter="[{!!done.date}compare:date:ne{!!due}]">
              <$action-sendmessage $message="tm-modal" $param="$:/plugins/nico/projectify/ui/forms/ConfirmNextDate" stateTiddler=<<stateTiddler>> sourceTiddler=<<sourceTiddler>>/>
	  	    </$list>
          </$list>
        </$vars>
      </$let>
    </$wikify>
  </$list>
  <$list filter="[all[current]has[nextdate]]">
    <$let nextdate={{!!nextdate}}>
      <<create-next-task>>
      </$let>    
  </$list>
  <$action-sendmessage $message="tm-auto-save-wiki"/>
\end



\procedure trigger-recurring()
  <$set name="nextdate" tiddler=<<stateTiddler>> field="due" emptyValue=<<nextdate0>> >
    <$list filter="[all[current]!has[recurring.until]]" variable="condition">
      <<create-next-task>>
    </$list>
    <$list filter="[all[current]get[recurring.until]compare:date:gteq<nextdate>]" variable="condition">
      <<create-next-task>>
    </$list>
  </$set>
  <$action-sendmessage $message="tm-auto-save-wiki"/>
\end


\procedure py-unmark-as-done()
  <$action-deletefield done.date/>
  <$action-sendmessage $message="tm-auto-save-wiki"/>
  <$action-listops $field="tags" $subfilter="-done"/>
\end


\procedure py-unmark-as-done-and-check-recurring()
  <<py-unmark-as-done>>
  <$list filter="[all[current]has[recurring.enabled]]">
    <$action-sendmessage $message="tm-modal" $param="$:/plugins/nico/projectify/ui/forms/RecurringDeleteNextTask.tid" tiddler=<<currentTiddler>>/>
  </$list>
\end
